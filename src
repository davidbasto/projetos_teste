angular.module("listaTelefonica", ["ngMessages", "serialGenerator", "ui", "ngRoute"]);
angular.module("listaTelefonica").config(["$httpProvider", function($httpProvider) {
	$httpProvider.interceptors.push("timestampInterceptor");
	$httpProvider.interceptors.push("errorInterceptor");
	$httpProvider.interceptors.push("loadingInterceptor");
}]);
angular.module("listaTelefonica").config(["$routeProvider", function ($routeProvider) {
	$routeProvider.when("/contatos", {
		templateUrl: "view/contatos.html",
		controller: "listaTelefonicaCtrl",
		resolve: {
			operadoras: ["operadorasAPI", function(operadorasAPI) {
				return operadorasAPI.getOperadoras();
			}],

			contatos: ["contatosAPI", function(contatosAPI) {
				return contatosAPI.getContatos();
			}]
		}
	});
	$routeProvider.when("/novoContato", {
		templateUrl: "view/novoContato.html",
		controller: "novoContatoCtrl",
		resolve: {
			operadoras: ["operadorasAPI", function(operadorasAPI) {
				return operadorasAPI.getOperadoras();
			}]
		}
	});
	$routeProvider.when("/detalhesContato/:id", {
		templateUrl: "view/detalhesContato.html",
		controller: "detalhesContatoCtrl",
		resolve: {
			contato: ["contatosAPI", "$route", function(contatosAPI, $route) {
				return contatosAPI.getContato($route.current.params.id);
			}]
		}
	});
	$routeProvider.when("/error", {
		templateUrl: "view/error.html"
	});
	$routeProvider.otherwise({
		redirectTo: "/contatos"
	});
}]);
angular.module("listaTelefonica").config(["serialGeneratorProvider", function (serialGeneratorProvider) {
	serialGeneratorProvider.setLength(5);
}]);
angular.module("listaTelefonica").controller("detalhesContatoCtrl", ["$scope", "$routeParams", "contato", function ($scope, $routeParams, contato) {	
	$scope.contato = contato.data;
}]);
angular.module("listaTelefonica").controller("listaTelefonicaCtrl", ["$scope", "serialGenerator", "operadoras", "contatos", "$filter", function ($scope, serialGenerator, operadoras, contatos, $filter) {
	$scope.app = $filter('upper')("Lista Telefonica");
	$scope.contatos = contatos.data;
	$scope.operadoras = operadoras.data;

	var init = function() {
		calcularImpostos($scope.contatos);
		generateSerial($scope.contatos);
	};

	var calcularImpostos = function(contatos) {
		contatos.forEach(function(contato) {
			contato.operadora.precoComImposto = calcularImposto(contato.operadora.preco);
		});
	};

	var generateSerial = function (contatos) {
		contatos.forEach(function(contato) {
				contato.serial = serialGenerator.generate();
		});
	};

	$scope.adicionarContato = function (contato) {
		contato.serial = serialGenerator.generate();
		contato.data = new Date();
		contatosAPI.saveContato(contato).success(function (data) {
			delete $scope.contato;
			$scope.contatoForm.$setPristine();
			carregarContatos();
		});
	};
	$scope.apagarContatos = function (contatos) {
		$scope.contatos = contatos.filter(function (contato) {
			if (!contato.selecionado) return contato;
		});
		$scope.verificaContatoSelecionado($scope.contatos);
	};

	var counter = 0;
	$scope.verificaContatoSelecionado = function (contatos) {
		console.log(counter++);
		$scope.hasContatoSelecionado = contatos.some(function (contato) {
			return contato.selecionado;
		});
	};
	$scope.ordenarPor = function (campo) {
		$scope.criterioDeOrdenacao = campo;
		$scope.direcaoDaOrdenacao = !$scope.direcaoDaOrdenacao;
	};

	var calcularImposto = function(preco) {
		var imposto = 1.2;
		return preco * imposto;
	};

	$scope.reset = function() {
		$scope.contatos = angular.copy($scope.contatos);
	};

	init();
}]);
angular.module("listaTelefonica").controller("novoContatoCtrl", ["$scope", "$location", "serialGenerator", "operadoras", function ($scope, $location, serialGenerator, operadoras) {
	console.log(operadoras.data);

	$scope.operadoras = operadoras.data;

	$scope.adicionarContato = function (contato) {
		contato.serial = serialGenerator.generate();
		contato.data = new Date();
		contatosAPI.saveContato(contato).success(function (data) {
			delete $scope.contato;
			$scope.contatoForm.$setPristine();
			$location.path("/contatos");
		});
	};
}]);
angular.module("listaTelefonica").directive("uiAlert", function() {
	return {
		templateUrl: "view/alert.html",
		replace: true,
		restrict : "AE",
		scope: {
			title: "@"
		},
		transclude: true
	};
});
angular.module("listaTelefonica").directive("uiDate", ["$filter", function($filter) {

	function link(scope, element, attrs, ctrl) {
		var _formatDate = function(date) {
			date = date.replace(/[^0-9]+/g, "");
			if(date.length > 2) {
				date = date.substring(0,2) + "/" + date.substring(2);
			}
			if(date.length > 5) {
				date = date.substring(0,5) + "/" + date.substring(5, 9);
			}
			return date;
		};

		element.bind("keyup", function() {
			ctrl.$setViewValue(_formatDate(ctrl.$viewValue));
			ctrl.$render();
		});

		ctrl.$parsers.push(function(value) {
			if(value.length === 10) {
				var dateArray = value.split("/");
				console.log(dateArray);
				return new Date(dateArray[2], dateArray[1] - 1, dateArray[0]).getTime();
			}
		});

		ctrl.$formatters.push(function(value) {
			return $filter("date")(value, "dd/MM/yyyy");
		});
	}

	return {
		require: "ngModel",
		link: link
	};
}]);
angular.module("listaTelefonica").filter("ellipsis", function() {
	return function(input, size) {
		if(input.length <= size) return input;
		var output = input.substring(0, (size || 2)) + "...";
		return output ;
	};
});
angular.module("listaTelefonica").filter("name", function() {
	return function(input) {
		var listaDeNomes = input.split(" ");

		var listaDeNomesFormatada = listaDeNomes.map(function(nome) {
			if(/^(da|de)$/.test(nome)) return nome;
			return nome.charAt(0).toUpperCase() + nome.substring(1).toLowerCase();
		});

		return listaDeNomesFormatada.join(" ");
	};
});
angular.module("listaTelefonica").filter("upper", function() {
	var counter = 0;
	return function(input) {
		console.log(counter++);
		if(!input) return;
		return input.toUpperCase(input);
	};
});
angular.module("listaTelefonica").factory("errorInterceptor", ["$q", "$location", function($q, $location) {
	return {
		responseError: function (rejection) {
			if(rejection.status === 404) {
				$location.path("/error");
			}
			return $q.reject(rejection);
		}
	};
}]);
angular.module("listaTelefonica").factory("loadingInterceptor", ["$q", "$rootScope", "$timeout", function($q, $rootScope, $timeout) {
	return {
		request: function(config) {
			$rootScope.loading = true;
			return config;
		},
		requestError: function(rejection) {
			$rootScope.loading = false;
			return $q.reject(rejection);
		},
		response: function(response) {
			$timeout(function() {
				$rootScope.loading = false;
			}, 500);
			return response;
		},
		responseError: function(rejection) {
			$rootScope.loading = false;
			return $q.reject(rejection);
		}
	};
}]);
angular.module("listaTelefonica").factory("timestampInterceptor", function() {
	return {
		request: function(config) {
			var url = config.url;
			if (url.indexOf('view') > -1) return config; 
			var timestamp = new Date().getTime();
			config.url = url + "?timestamp=" + timestamp;
			return config;
		}
	};
});
angular.module("listaTelefonica").factory("contatosAPI", ["$http", "config", function ($http, config) {
	var _getContatos = function () {
		return $http.get(config.baseUrl + "/contatos");
	};

	var _getContato = function (id) {
		return $http.get(config.baseUrl + "/contatos/" + id);
	};

	var _saveContato = function (contato) {
		return $http.post(config.baseUrl + "/contatos", contato);
	};

	return {
		getContatos: _getContatos,
		getContato: _getContato,
		saveContato: _saveContato
	};
}]);
angular.module("listaTelefonica").service("operadorasAPI", ["$http", "config", function ($http, config) {
	this.getOperadoras = function () {
		return $http.get(config.baseUrl + "/operadoras");
	};
}]);
angular.module("listaTelefonica").provider("serialGenerator", ["config", function (config) {
	console.log(config);
	var _length = 5;
	
	this.getLength = function () {
		return _length;
	};

	this.setLength = function (length) {
		_length = length;
	};

	this.$get = function () {
		return {
			generate: function () {
				var serial = "";
				while(serial.length < _length) {
					serial += String.fromCharCode(Math.floor(Math.random() * 64) + 32);
				}
				return serial;
			}

		};
	};
}]);
angular.module("listaTelefonica").constant("config", {
	baseUrl: "http://localhost:3412"
});